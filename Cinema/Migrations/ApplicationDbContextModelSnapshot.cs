// <auto-generated />
using System;
using Cinema.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinema.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cinema.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Known for Inception and Titanic",
                            FullName = "Leonardo DiCaprio",
                            ImgUrl = "leo.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Starred in Joker (2019)",
                            FullName = "Joaquin Phoenix",
                            ImgUrl = "joaquin.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Avengers and Lucy",
                            FullName = "Scarlett Johansson",
                            ImgUrl = "scarlett.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Venom and Mad Max",
                            FullName = "Tom Hardy",
                            ImgUrl = "hardy.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "A Quiet Place and Edge of Tomorrow",
                            FullName = "Emily Blunt",
                            ImgUrl = "emily.jpg"
                        });
                });

            modelBuilder.Entity("Cinema.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 18, 12, 33, 24, 17, DateTimeKind.Local).AddTicks(5799),
                            Description = "High energy and stunts",
                            DisplayOrder = 0,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 18, 12, 33, 24, 18, DateTimeKind.Local).AddTicks(6176),
                            Description = "Emotional and deep storytelling",
                            DisplayOrder = 0,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 18, 12, 33, 24, 18, DateTimeKind.Local).AddTicks(6187),
                            Description = "Funny and entertaining",
                            DisplayOrder = 0,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 10, 18, 12, 33, 24, 18, DateTimeKind.Local).AddTicks(6188),
                            Description = "Scary and thrilling",
                            DisplayOrder = 0,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 10, 18, 12, 33, 24, 18, DateTimeKind.Local).AddTicks(6189),
                            Description = "Love and relationships",
                            DisplayOrder = 0,
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("Cinema.Models.Cinemaa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Top cinema in Cairo",
                            ImgUrl = "galaxy.jpg",
                            Location = "Cairo",
                            Name = "Galaxy Cinema"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Luxury screens in Alexandria",
                            ImgUrl = "vox.jpg",
                            Location = "Alexandria",
                            Name = "Vox Cinema"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Massive experience in Giza",
                            ImgUrl = "imax.jpg",
                            Location = "Giza",
                            Name = "IMAX"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Modern cinema in Mansoura",
                            ImgUrl = "cinemacity.jpg",
                            Location = "Mansoura",
                            Name = "Cinema City"
                        });
                });

            modelBuilder.Entity("Cinema.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CinemaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SubImages")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CinemaId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CinemaId = 1,
                            DateTime = new DateTime(2020, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dream-sharing heist movie",
                            MainImg = "inception.jpg",
                            Name = "Inception",
                            Price = 120m,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CinemaId = 2,
                            DateTime = new DateTime(2019, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A mentally troubled comedian turns criminal",
                            MainImg = "joker.jpg",
                            Name = "Joker",
                            Price = 100m,
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CinemaId = 3,
                            DateTime = new DateTime(2019, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Superheroes unite to reverse the snap",
                            MainImg = "endgame.jpg",
                            Name = "Avengers: Endgame",
                            Price = 150m,
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CinemaId = 4,
                            DateTime = new DateTime(2018, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A family must live in silence",
                            MainImg = "quietplace.jpg",
                            Name = "A Quiet Place",
                            Price = 90m,
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CinemaId = 1,
                            DateTime = new DateTime(1997, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Love story aboard the doomed ship",
                            MainImg = "titanic.jpg",
                            Name = "Titanic",
                            Price = 110m,
                            Status = true
                        });
                });

            modelBuilder.Entity("Cinema.Models.MovieActor", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MovieActors");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            ActorId = 1
                        },
                        new
                        {
                            MovieId = 2,
                            ActorId = 2
                        },
                        new
                        {
                            MovieId = 3,
                            ActorId = 3
                        },
                        new
                        {
                            MovieId = 3,
                            ActorId = 4
                        },
                        new
                        {
                            MovieId = 4,
                            ActorId = 5
                        },
                        new
                        {
                            MovieId = 5,
                            ActorId = 1
                        },
                        new
                        {
                            MovieId = 5,
                            ActorId = 3
                        });
                });

            modelBuilder.Entity("Cinema.Models.Movie", b =>
                {
                    b.HasOne("Cinema.Models.Category", "Category")
                        .WithMany("Movies")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Cinema.Models.Cinemaa", "Cinema")
                        .WithMany("Movies")
                        .HasForeignKey("CinemaId");

                    b.Navigation("Category");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("Cinema.Models.MovieActor", b =>
                {
                    b.HasOne("Cinema.Models.Actor", "Actor")
                        .WithMany("MovieActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.Models.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Cinema.Models.Actor", b =>
                {
                    b.Navigation("MovieActors");
                });

            modelBuilder.Entity("Cinema.Models.Category", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Cinema.Models.Cinemaa", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Cinema.Models.Movie", b =>
                {
                    b.Navigation("MovieActors");
                });
#pragma warning restore 612, 618
        }
    }
}
